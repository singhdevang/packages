install.packages("devtools")
library(devtools)
create("icbplot")
create("icbplot")
library(ggplot2)
theme_my_company <- function() {
theme_minimal(base_family = "Arial") +
theme(
plot.title = element_text(color = rgb(27/255, 87/255, 104/255), size = 14, face = "bold"),
# Further theming options
)
}
my_company_colors <- function() {
primary <- rgb(74/255, 121/255, 134/255)
# Add more colors as needed
return(list(primary = primary))
}
library(ggplot2)
create_barplot <- function(data, x, y, fill, orientation = c("vertical", "horizontal")) {
orientation <- match.arg(orientation)
colors <- my_company_colors()
p <- ggplot(data, aes_string(x = x, y = y, fill = fill)) +
geom_bar(stat = "identity", position = position_dodge()) +
scale_fill_manual(values = colors) +
theme_my_company()
if (orientation == "horizontal") {
p <- p + coord_flip()
}
return(p)
}
devtools::build()
devtools::install()
library(icpackage)
countries <- data.frame(c("India", "Pakistan", "Malaysia", "Europe"), c("10", "20", "30", "40"))
View(countries)
countries <- data.frame(Country = c("India", "Pakistan", "Malaysia", "Europe"),GDP = c("10", "20", "30", "40"))
View(countries)
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "my_company_colors", orientation = "vertical")
print(test_plot)
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "my_company_colors", orientation = "vertical")
print(test_plot)
View(countries)
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "Country", orientation = "vertical")
print(test_plot)
countries <- data.frame(Country = c("India", "Pakistan", "Malaysia", "Europe"),GDP = c(10, 20, 30, 40))
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", orientation = "vertical")
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "Country", orientation = "vertical")
print(test_plot)
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "Country", orientation = "vertical")
print(test_plot)
library(ggplot2)
create_barplot <- function(data, x, y, fill = NULL, orientation = c("vertical", "horizontal")) {
orientation <- match.arg(orientation)
colors <- unlist(my_company_colors()) # unlist to convert from list to vector
p <- ggplot(data, aes_string(x = x, y = y)) +
geom_bar(stat = "identity", fill = colors["primary"]) + # apply the color directly
theme_my_company()
# Only use scale_fill_manual and fill aesthetic if fill is provided
if (!is.null(fill)) {
p <- p + scale_fill_manual(values = colors, aesthetics = fill)
}
if (orientation == "horizontal") {
p <- p + coord_flip()
}
return(p)
}
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "Country", orientation = "vertical")
print(test_plot)
# Ensure your data frame and variables match these example names
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "Country", orientation = "horizontal")
print(test_plot)
library(ggplot2)
create_barplot <- function(data, x, y, fill = NULL, orientation = c("vertical", "horizontal"), x_lab = NULL, y_lab = NULL) {
orientation <- match.arg(orientation)
colors <- unlist(my_company_colors()) # unlist to convert from list to vector
# Base plot
p <- ggplot(data, aes_string(x = x, y = y)) +
geom_bar(stat = "identity", fill = colors["primary"]) + # apply the color directly
theme_my_company() +
theme(
panel.grid.major = element_blank(), # remove major gridlines
panel.grid.minor = element_blank(), # remove minor gridlines
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank()  # remove y axis title
)
# Optional fill aesthetic and color scale
if (!is.null(fill)) {
p <- p + scale_fill_manual(values = colors, aesthetics = fill)
}
# Optional manual axis labels
if (!is.null(x_lab)) {
p <- p + labs(x = x_lab)
}
if (!is.null(y_lab)) {
p <- p + labs(y = y_lab)
}
# Optional plot orientation
if (orientation == "horizontal") {
p <- p + coord_flip()
}
return(p)
}
# Ensure your data frame and variables match these example names
test_plot <- create_barplot(data = countries, x = "Country", y = "GDP", fill = "Country", orientation = "horizontal")
print(test_plot)
